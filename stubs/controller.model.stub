<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }};
use App\Traits\ResponseTrait;
use App\Services\{{ model }}Service;
use App\Http\Requests\{{ model }}Request;

class {{ class }} extends Controller
{
    use ResponseTrait;
    protected ${{ modelVariable }}Services;
    public function __construct()
    {
        $this->{{ modelVariable }}Services = new {{ model }}Service();
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index({{ model }}Request $request)
    {
        //
        $data = $this->{{ modelVariable }}Services->all($request);
        return $this->success($data,'success');
    }


    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{ model }}Request $request)
    {
        //
        $data = $this->{{ modelVariable }}Services->create($request);
        return $this->success($data,'success');
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function show({{ model }}Request $request)
    {
        //
        $data = $this->{{ modelVariable }}Services->find($request);
        return $this->success($data,'success');
    }



    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function update({{ model }}Request $request)
    {
        //
        $data = $this->{{ modelVariable }}Services->update($request);
        return $this->success($data,'success');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{ model }}Request $request)
    {
        //
        $this->{{ modelVariable }}Services->delete($request);
        return $this->success([],'success');

    }
}
